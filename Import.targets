<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Non-Portable Library build -->
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\WindowsXaml\v12.0\Microsoft.Windows.UI.Xaml.CSharp.targets" Condition=" '$(TargetFrameworkIdentifier)' == '.NETCore' " />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" Condition=" '$(TargetFrameworkIdentifier)' != '.NETPortable' And ('$(BuildPlatform)' == 'DESKTOPCLR' Or '$(BuildPlatform)' == 'XNA') " />
  
  <!-- Silverlight ONLY (i.e., not phone) -->
  <!--<Import Project="$(MSBuildExtensionsPath32)\Microsoft\Silverlight\$(SilverlightVersion)\Microsoft.Silverlight.CSharp.targets" Condition=" '$(TargetFrameworkIdentifier)' != '.NETPortable' And '$(BuildPlatform)' == 'SILVERLIGHT' AND !('$(BuildFlavor)' == 'SILVERLIGHTM7') " />-->
  
  <!-- Windows Phone 8 -->
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\$(TargetFrameworkIdentifier)\$(TargetFrameworkVersion)\Microsoft.$(TargetFrameworkIdentifier).$(TargetFrameworkVersion).Overrides.targets" Condition=" '$(TargetFrameworkIdentifier)' != '.NETPortable' And '$(BuildFlavor)' == 'WINDOWS_PHONE8' "/>
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\$(TargetFrameworkIdentifier)\$(TargetFrameworkVersion)\Microsoft.$(TargetFrameworkIdentifier).CSharp.targets" Condition=" '$(TargetFrameworkIdentifier)' != '.NETPortable' And '$(BuildFlavor)' == 'WINDOWS_PHONE8' "/>
 
  <!-- Portable Library Build -->
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" Condition=" '$(TargetFrameworkIdentifier)' == '.NETPortable' " />


  <!-- If "Sign" is set and assembly should be signed, generate a .sign file-->  
  <Target Name="AfterBuild">
    
    <WriteLinesToFile Condition=" '$(ProductSignAssembly)' == 'true' AND '$(Sign)' == 'Sign' "
        File="$(OutDir)\$(TargetFileName).sign"
        Overwrite="true"
        Lines="Auto-generated file, indicates the corresponding binary file needs to be signed.">
    </WriteLinesToFile>
 
    <!-- For some reason, using a plain <ItemGroup> does not fill in the list correctly, so we must use <CreateItem> -->
    <CreateItem Include="$(OutDir)\*.sign;$(OutDir)\*.xml" Condition=" '$(TargetFrameworkIdentifier)' == '.NETCore' ">
      <Output TaskParameter="Include" ItemName="CanaryFiles" />
    </CreateItem>

    <!-- For some reason, using a plain <ItemGroup> does not fill in the list correctly, so we must use <CreateItem> -->
    <CreateItem Include="$(OutDir)\*.*" Condition=" '$(TargetFrameworkIdentifier)' == '.NETCore' ">
      <Output TaskParameter="Include" ItemName="BuiltFilesInOutDir" />
    </CreateItem>

    <Message Text="-- Built files: @(BuiltFilesInOutDir)" Importance="high"/>
    <Copy
        SourceFiles="@(BuiltFilesInOutDir)"
        DestinationFolder="$(OutDir)\.."
        Condition=" '$(TargetFrameworkIdentifier)' == '.NETCore' " />
  </Target>
  
   <!-- Skip validation of packages.config since we are manageing the packages manuallt  --> 
   <PropertyGroup>
      <SkipValidatePackageReferences>true</SkipValidatePackageReferences>
   </PropertyGroup>
  
</Project>
